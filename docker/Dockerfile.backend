# 多阶段构建 - 构建阶段
FROM node:18-alpine AS builder

WORKDIR /app

# 配置npm使用阿里云镜像源
RUN npm config set registry https://registry.npmmirror.com

# 复制package文件
COPY package*.json ./

# 安装所有依赖（包括开发依赖，用于构建）
RUN npm ci && npm cache clean --force

# 复制源代码
COPY . .

# 构建TypeScript
RUN npm run build

# 生产阶段
FROM node:18-alpine AS production

# 创建非root用户和组（匹配诊断中的 gid 996）
RUN addgroup -g 996 -S nodejs && \
    adduser -S nodejs -u 1001 -G nodejs  # uid 1001, gid 996，确保一致

WORKDIR /app

# 复制package文件
COPY package*.json ./

# 配置npm使用阿里云镜像源
RUN npm config set registry https://registry.npmmirror.com

# 安装生产依赖
RUN npm ci --only=production && npm cache clean --force

# 从构建阶段复制构建产物
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/src ./src

# 创建必要的目录并设置权限（修复权限问题）
RUN mkdir -p uploads converted logs && \
    chown -R nodejs:nodejs uploads converted logs && \
    chmod -R 775 uploads converted logs  # 确保 group writable

# 默认以root运行，避免宿主机挂载卷权限不匹配导致写入失败

# 暴露端口
EXPOSE 3001

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# 启动命令
CMD ["node", "dist/server.js"]