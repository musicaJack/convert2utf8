version: '3.8'

services:
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
      target: production
    container_name: convert2utf8-frontend
    restart: unless-stopped
    networks:
      - geotracker_baidu_map_network
    environment:
      - NGINX_HOST=www.beingdigital.cn
    volumes:
      - frontend_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on: []

  backend:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.backend
      target: production
    container_name: convert2utf8-backend
    restart: unless-stopped
    networks:
      - geotracker_baidu_map_network
    environment:
      - NODE_ENV=production
      - PORT=3001
      - CORS_ORIGIN=https://www.beingdigital.cn
      - UPLOAD_DIR=/app/uploads
      - CONVERTED_DIR=/app/converted
      - LOG_LEVEL=info
      - EPUB_SERVICE_URL=http://epub-service:5000
    volumes:
      - ../backend/uploads:/app/uploads
      - ../backend/converted:/app/converted
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://127.0.0.1:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s  # 优化：确保容器有足够时间启动
    depends_on:
      - epub-service

  epub-service:
    build:
      context: ../epub-service
      dockerfile: ../docker/Dockerfile.epub-service
      target: production
    container_name: convert2utf8-epub-service
    restart: unless-stopped
    networks:
      - geotracker_baidu_map_network
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.py
      - UPLOAD_FOLDER=/app/uploads
      - CONVERTED_FOLDER=/app/converted
    volumes:
      - ../epub-service/uploads:/app/uploads
      - ../epub-service/converted:/app/converted
      - epub_service_logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://127.0.0.1:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on: []

networks:
  geotracker_baidu_map_network:
    external: true

volumes:
  frontend_logs:
  backend_logs:
  epub_service_logs: 